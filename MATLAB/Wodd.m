%% process matrix for a qubit encoded on the odd cats passing through lossy channel
function y = Wodd(alpha, gamma)
y       = [(-1/2).*(sin(alpha.^2).^2+(-1).*sinh(alpha.^2).^2).^(-1).*(cos( ...
    alpha.^2.*gamma).*sin(alpha.^2)+cosh(alpha.^2.*gamma).*sinh( ...
    alpha.^2)+(-1).*sin(alpha.^2).^2.*((cos(alpha.^2.*gamma)+cosh( ...
    alpha.^2.*gamma)).*((-1).*sin(alpha.^2)+sinh(alpha.^2)).^(-1)).^( ...
    1/2).*(((-1).*cos(alpha.^2.*gamma)+cosh(alpha.^2.*gamma)).*(sin( ...
    alpha.^2)+sinh(alpha.^2)).^(-1)).^(1/2)+sinh(alpha.^2).^2.*((cos( ...
    alpha.^2.*gamma)+cosh(alpha.^2.*gamma)).*((-1).*sin(alpha.^2)+ ...
    sinh(alpha.^2)).^(-1)).^(1/2).*(((-1).*cos(alpha.^2.*gamma)+cosh( ...
    alpha.^2.*gamma)).*(sin(alpha.^2)+sinh(alpha.^2)).^(-1)).^(1/2)).* ...
    (sin(alpha.^2.*((-1)+gamma))+(-1).*sinh(alpha.^2.*((-1)+gamma))), ...
    0,0,(-1/2).*(cosh(alpha.^2.*gamma).*sin(alpha.^2)+cos(alpha.^2.* ...
    gamma).*sinh(alpha.^2)).*(sin(alpha.^2).^2+(-1).*sinh(alpha.^2) ...
    .^2).^(-1).*(sin(alpha.^2.*((-1)+gamma))+(-1).*sinh(alpha.^2.*(( ...
    -1)+gamma))),0,0,0,0;0,(1/2).*(sin(alpha.^2).^2+(-1).*sinh( ...
    alpha.^2).^2).^(-1).*(cosh(alpha.^2.*gamma).*sinh(alpha.^2)+((cos( ...
    alpha.^2.*gamma)+(-1).*cosh(alpha.^2.*gamma)).*(sin(alpha.^2)+(-1) ...
    .*sinh(alpha.^2)).^(-1)).^(1/2).*sinh(alpha.^2).^2.*((cos( ...
    alpha.^2.*gamma)+cosh(alpha.^2.*gamma)).*(sin(alpha.^2)+sinh( ...
    alpha.^2)).^(-1)).^(1/2)+(-1).*sin(alpha.^2).*(cos(alpha.^2.* ...
    gamma)+sin(alpha.^2).*((cos(alpha.^2.*gamma)+(-1).*cosh(alpha.^2.* ...
    gamma)).*(sin(alpha.^2)+(-1).*sinh(alpha.^2)).^(-1)).^(1/2).*(( ...
    cos(alpha.^2.*gamma)+cosh(alpha.^2.*gamma)).*(sin(alpha.^2)+sinh( ...
    alpha.^2)).^(-1)).^(1/2))).*(sin(alpha.^2.*((-1)+gamma))+sinh( ...
    alpha.^2.*((-1)+gamma))),(sqrt(-1)*(1/2)).*(cosh(alpha.^2.*gamma) ...
    .*sin(alpha.^2)+(-1).*cos(alpha.^2.*gamma).*sinh(alpha.^2)).*(sin( ...
    alpha.^2).^2+(-1).*sinh(alpha.^2).^2).^(-1).*(sin(alpha.^2.*((-1)+ ...
    gamma))+sinh(alpha.^2.*((-1)+gamma))),0,0,0,0,0;0,(sqrt(-1)*(-1/2) ...
    ).*(cosh(alpha.^2.*gamma).*sin(alpha.^2)+(-1).*cos(alpha.^2.* ...
    gamma).*sinh(alpha.^2)).*(sin(alpha.^2).^2+(-1).*sinh(alpha.^2) ...
    .^2).^(-1).*(sin(alpha.^2.*((-1)+gamma))+sinh(alpha.^2.*((-1)+ ...
    gamma))),(1/2).*(sin(alpha.^2).^2+(-1).*sinh(alpha.^2).^2).^(-1).* ...
    (cosh(alpha.^2.*gamma).*sinh(alpha.^2)+(-1).*((cos(alpha.^2.* ...
    gamma)+(-1).*cosh(alpha.^2.*gamma)).*(sin(alpha.^2)+(-1).*sinh( ...
    alpha.^2)).^(-1)).^(1/2).*sinh(alpha.^2).^2.*((cos(alpha.^2.* ...
    gamma)+cosh(alpha.^2.*gamma)).*(sin(alpha.^2)+sinh(alpha.^2)).^( ...
    -1)).^(1/2)+sin(alpha.^2).*((-1).*cos(alpha.^2.*gamma)+sin( ...
    alpha.^2).*((cos(alpha.^2.*gamma)+(-1).*cosh(alpha.^2.*gamma)).*( ...
    sin(alpha.^2)+(-1).*sinh(alpha.^2)).^(-1)).^(1/2).*((cos( ...
    alpha.^2.*gamma)+cosh(alpha.^2.*gamma)).*(sin(alpha.^2)+sinh( ...
    alpha.^2)).^(-1)).^(1/2))).*(sin(alpha.^2.*((-1)+gamma))+sinh( ...
    alpha.^2.*((-1)+gamma))),0,0,0,0,0;(-1/2).*(cosh(alpha.^2.*gamma) ...
    .*sin(alpha.^2)+cos(alpha.^2.*gamma).*sinh(alpha.^2)).*(sin( ...
    alpha.^2).^2+(-1).*sinh(alpha.^2).^2).^(-1).*(sin(alpha.^2.*((-1)+ ...
    gamma))+(-1).*sinh(alpha.^2.*((-1)+gamma))),0,0,(-1/2).*(sin( ...
    alpha.^2).^2+(-1).*sinh(alpha.^2).^2).^(-1).*(cos(alpha.^2.*gamma) ...
    .*sin(alpha.^2)+cosh(alpha.^2.*gamma).*sinh(alpha.^2)+sin( ...
    alpha.^2).^2.*((cos(alpha.^2.*gamma)+cosh(alpha.^2.*gamma)).*((-1) ...
    .*sin(alpha.^2)+sinh(alpha.^2)).^(-1)).^(1/2).*(((-1).*cos( ...
    alpha.^2.*gamma)+cosh(alpha.^2.*gamma)).*(sin(alpha.^2)+sinh( ...
    alpha.^2)).^(-1)).^(1/2)+(-1).*sinh(alpha.^2).^2.*((cos(alpha.^2.* ...
    gamma)+cosh(alpha.^2.*gamma)).*((-1).*sin(alpha.^2)+sinh(alpha.^2) ...
    ).^(-1)).^(1/2).*(((-1).*cos(alpha.^2.*gamma)+cosh(alpha.^2.* ...
    gamma)).*(sin(alpha.^2)+sinh(alpha.^2)).^(-1)).^(1/2)).*(sin( ...
    alpha.^2.*((-1)+gamma))+(-1).*sinh(alpha.^2.*((-1)+gamma))),0,0,0, ...
    0;0,0,0,0,(1/2).*(cos(alpha.^2.*((-1)+gamma))+cosh(alpha.^2.*((-1) ...
    +gamma))).*(sin(alpha.^2).^2+(-1).*sinh(alpha.^2).^2).^(-1).*((-1) ...
    .*sinh(alpha.^2).*sinh(alpha.^2.*gamma)+(-1).*sinh(alpha.^2).^2.*( ...
    (sin(alpha.^2)+(-1).*sinh(alpha.^2)).^(-1).*(sin(alpha.^2.*gamma)+ ...
    (-1).*sinh(alpha.^2.*gamma))).^(1/2).*((sin(alpha.^2)+sinh( ...
    alpha.^2)).^(-1).*(sin(alpha.^2.*gamma)+sinh(alpha.^2.*gamma))).^( ...
    1/2)+sin(alpha.^2).*(sin(alpha.^2.*gamma)+sin(alpha.^2).*((sin( ...
    alpha.^2)+(-1).*sinh(alpha.^2)).^(-1).*(sin(alpha.^2.*gamma)+(-1) ...
    .*sinh(alpha.^2.*gamma))).^(1/2).*((sin(alpha.^2)+sinh(alpha.^2)) ...
    .^(-1).*(sin(alpha.^2.*gamma)+sinh(alpha.^2.*gamma))).^(1/2))),0, ...
    0,(-1).*((-2)+cos(2.*alpha.^2)+cosh(2.*alpha.^2)).^(-1).*(cos( ...
    alpha.^2.*((-1)+gamma))+cosh(alpha.^2.*((-1)+gamma))).*(sin( ...
    alpha.^2.*gamma).*sinh(alpha.^2)+(-1).*sin(alpha.^2).*sinh( ...
    alpha.^2.*gamma));0,0,0,0,0,(-1/2).*(cos(alpha.^2.*((-1)+gamma))+( ...
    -1).*cosh(alpha.^2.*((-1)+gamma))).*(sin(alpha.^2).^2+(-1).*sinh( ...
    alpha.^2).^2).^(-1).*((-1).*sin(alpha.^2).*sin(alpha.^2.*gamma)+( ...
    -1).*sinh(alpha.^2).*sinh(alpha.^2.*gamma)+sin(alpha.^2).^2.*(( ...
    sin(alpha.^2)+sinh(alpha.^2)).^(-1).*((-1).*sin(alpha.^2.*gamma)+ ...
    sinh(alpha.^2.*gamma))).^(1/2).*(((-1).*sin(alpha.^2)+sinh( ...
    alpha.^2)).^(-1).*(sin(alpha.^2.*gamma)+sinh(alpha.^2.*gamma))).^( ...
    1/2)+(-1).*sinh(alpha.^2).^2.*((sin(alpha.^2)+sinh(alpha.^2)).^( ...
    -1).*((-1).*sin(alpha.^2.*gamma)+sinh(alpha.^2.*gamma))).^(1/2).*( ...
    ((-1).*sin(alpha.^2)+sinh(alpha.^2)).^(-1).*(sin(alpha.^2.*gamma)+ ...
    sinh(alpha.^2.*gamma))).^(1/2)),(sqrt(-1)*(1/2)).*(cos(alpha.^2.*( ...
    (-1)+gamma))+(-1).*cosh(alpha.^2.*((-1)+gamma))).*(sin(alpha.^2) ...
    .^2+(-1).*sinh(alpha.^2).^2).^(-1).*(sin(alpha.^2.*gamma).*sinh( ...
    alpha.^2)+sin(alpha.^2).*sinh(alpha.^2.*gamma)),0;0,0,0,0,0,(sqrt( ...
    -1)*(-1/2)).*(cos(alpha.^2.*((-1)+gamma))+(-1).*cosh(alpha.^2.*(( ...
    -1)+gamma))).*(sin(alpha.^2).^2+(-1).*sinh(alpha.^2).^2).^(-1).*( ...
    sin(alpha.^2.*gamma).*sinh(alpha.^2)+sin(alpha.^2).*sinh( ...
    alpha.^2.*gamma)),(1/2).*(cos(alpha.^2.*((-1)+gamma))+(-1).*cosh( ...
    alpha.^2.*((-1)+gamma))).*(sin(alpha.^2).^2+(-1).*sinh(alpha.^2) ...
    .^2).^(-1).*(sin(alpha.^2).*sin(alpha.^2.*gamma)+sinh(alpha.^2).* ...
    sinh(alpha.^2.*gamma)+sin(alpha.^2).^2.*((sin(alpha.^2)+sinh( ...
    alpha.^2)).^(-1).*((-1).*sin(alpha.^2.*gamma)+sinh(alpha.^2.* ...
    gamma))).^(1/2).*(((-1).*sin(alpha.^2)+sinh(alpha.^2)).^(-1).*( ...
    sin(alpha.^2.*gamma)+sinh(alpha.^2.*gamma))).^(1/2)+(-1).*sinh( ...
    alpha.^2).^2.*((sin(alpha.^2)+sinh(alpha.^2)).^(-1).*((-1).*sin( ...
    alpha.^2.*gamma)+sinh(alpha.^2.*gamma))).^(1/2).*(((-1).*sin( ...
    alpha.^2)+sinh(alpha.^2)).^(-1).*(sin(alpha.^2.*gamma)+sinh( ...
    alpha.^2.*gamma))).^(1/2)),0;0,0,0,0,(-1).*((-2)+cos(2.*alpha.^2)+ ...
    cosh(2.*alpha.^2)).^(-1).*(cos(alpha.^2.*((-1)+gamma))+cosh( ...
    alpha.^2.*((-1)+gamma))).*(sin(alpha.^2.*gamma).*sinh(alpha.^2)+( ...
    -1).*sin(alpha.^2).*sinh(alpha.^2.*gamma)),0,0,(1/2).*(cos( ...
    alpha.^2.*((-1)+gamma))+cosh(alpha.^2.*((-1)+gamma))).*(sin( ...
    alpha.^2).^2+(-1).*sinh(alpha.^2).^2).^(-1).*((-1).*sinh(alpha.^2) ...
    .*sinh(alpha.^2.*gamma)+sinh(alpha.^2).^2.*((sin(alpha.^2)+(-1).* ...
    sinh(alpha.^2)).^(-1).*(sin(alpha.^2.*gamma)+(-1).*sinh(alpha.^2.* ...
    gamma))).^(1/2).*((sin(alpha.^2)+sinh(alpha.^2)).^(-1).*(sin( ...
    alpha.^2.*gamma)+sinh(alpha.^2.*gamma))).^(1/2)+sin(alpha.^2).*( ...
    sin(alpha.^2.*gamma)+(-1).*sin(alpha.^2).*((sin(alpha.^2)+(-1).* ...
    sinh(alpha.^2)).^(-1).*(sin(alpha.^2.*gamma)+(-1).*sinh(alpha.^2.* ...
    gamma))).^(1/2).*((sin(alpha.^2)+sinh(alpha.^2)).^(-1).*(sin( ...
    alpha.^2.*gamma)+sinh(alpha.^2.*gamma))).^(1/2)))];
end